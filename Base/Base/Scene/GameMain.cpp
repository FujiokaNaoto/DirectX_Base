//**プログラムヘッダ***************************************************************
//	プログラム概要	:	ゲームメインクラス実装
//*********************************************************************************


//==include部======================================================================
#include <math.h>
#include <stdlib.h>
#include "../System/GameManager.h"
#include "../Window/GameWnd.h"

#include "GameMain.h"
#include "../System/Register.h"
//=================================================================================


//==定数・列挙型部=================================================================

// --オブジェクト初期値--
namespace eMainConst
{
	//const	char*		BGM_NAME = "resource_data/sound/bgm/勉強中に飲むコーヒー的なBGM.wav";
	//const	char*		KEY_SE_NAME = "resource_data/sound/se/button01.mp3";
};

//=================================================================================


//==マクロ定義部===================================================================
//	なし
//=================================================================================


//==クラス宣言部===================================================================
//	なし
//=================================================================================


//==グローバル変数部===============================================================

//=================================================================================


//==静的メンバ変数部===============================================================

//=================================================================================


//==プロトタイプ宣言===============================================================
//=================================================================================


//**関数***************************************************************************
//	概要	:	コンストラクタ
//*********************************************************************************
CGameMain::CGameMain(void):
m_pKey(NULL)
{
}


//**関数***************************************************************************
//	概要	:	デストラクタ
//*********************************************************************************
CGameMain::~CGameMain(void)
{
}


//**関数***************************************************************************
//	概要	:	生成
//			:	生成、初期化成功でシーンへのポインタを返す。
//			:	失敗したらNULLを返す
//*********************************************************************************
CGameMain* CGameMain::Create(int nSceneID)
{
	CGameMain* pGameMain = new CGameMain();
	if (! pGameMain) 
	{
		return NULL;
	}

	pGameMain->m_nSceneID = nSceneID;					// シーンIDセット

	return pGameMain;
}


//**関数***************************************************************************
//	概要	:	解放
//*********************************************************************************
void CGameMain::Release()
{
	Uninit();
	delete this;
}


//関数ヘッダ***********************************************************************	
//	概要	:	初期化、ゲームループ内
//*********************************************************************************
bool CGameMain::Init(void)
{
	
	// BGMロード
	/*
	m_pBgm = OpenSound(MANAGER.GetAudioDevice()->get() , eMainConst::BGM_NAME , true);
	m_pBgm->setRepeat(true);
	m_pBgm->play();					// 再生
	*/

	// SEロード
	//m_pKey = OpenSoundEffect(MANAGER.GetAudioDevice()->get() , eMainConst::KEY_SE_NAME , MULTIPLE);
	
	return true;
}


//関数ヘッダ***********************************************************************	
//	概要	:	終了処理、ゲームループ内
//*********************************************************************************
void CGameMain::Uninit(void)
{
	// 固定カメラに変更
	MANAGER.GetCamera()->SetCameraMode(eCameraState::FIXED , NULL , eCameraState::POS_FIX , 
		eCameraState::LOOK_FIX , eCameraState::UP_FIX , 0);

	//m_pBgm->stop();

	// --メイン所属オブジェクト解放--
	REGISTER->ReleaseScene(eScene_ID::MAIN);
	REGISTER->ReleaseScene(eScene_ID::PAUSE);
}


//**関数***************************************************************************
//	概要	:	入力受付
//*********************************************************************************
void CGameMain::Input()
{
	CDXInput* pInput = MANAGER.GetInput();

#ifdef _DEBUG
	// Enterキートリガーでクリアリザルトへ
	if(! REGISTER->GetPauseFlg() && pInput->GetKeyTrigger(DIK_RETURN))
	{
		MANAGER.GetSceneManage()->SetNextScene(eScene_ID::CLEAR , eChanging::CHANGE_WHITEFEAD);
	}
#endif

	
}


//**関数***************************************************************************
//	概要	:	更新
//*********************************************************************************
void CGameMain::Update()
{
}


//**関数***************************************************************************
//	概要	:	描画
//*********************************************************************************
void CGameMain::Draw()
{
	TCHAR	str[256];						// バッファ
	CGraphics*	pGraph = MANAGER.GetGraph();

#ifdef _DEBUG
	_stprintf_s(str , _T("メインクラス\n"));
	MANAGER.AddDebugStr(str);
#endif
}


//**関数***************************************************************************
//	概要	:	プライオリティの最大数取得
//*********************************************************************************
int CGameMain::GetMaxPriority()
{
	return (int)eMainPri::MAX;
}
//=================================================================================
//	End of File
//=================================================================================