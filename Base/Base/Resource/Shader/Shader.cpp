//**プログラムヘッダ***************************************************************
//	プログラム概要	:	シェーダークラス
//*********************************************************************************


//==include部======================================================================
#include "../../System/common.h"
#include "Shader.h"
#include "../../System/Register.h"
//=================================================================================


//==定数・列挙型部=================================================================

//=================================================================================


//==マクロ定義部===================================================================

//=================================================================================


//==クラス・構造体宣言部===========================================================

//=================================================================================


//==静的メンバ変数部===============================================================

//=================================================================================


//==プロトタイプ宣言===============================================================

//=================================================================================


//**関数***************************************************************************
//	概要	:	コンストラクタ
//*********************************************************************************
CShader::CShader():
m_nType(-1),
m_unHandle(0),
m_hTech(0),
m_unPassNum(0),
m_pFx(NULL)
{
	m_unHandle = REGISTER->handle.CreateHandle(this);
}


//**関数***************************************************************************
//	概要	:	デストラクタ
//*********************************************************************************
CShader::~CShader()
{
}


//**関数***************************************************************************
//	概要	:	解放
//*********************************************************************************
void CShader::Release()
{
	if(m_pFx) SAFE_RELEASE(m_pFx);

	delete this;
}


//**関数***************************************************************************
//	概要	:	シェーダ開始
//*********************************************************************************
UINT CShader::BeginShader()
{
	return 0;
}


//**関数***************************************************************************
//	概要	:	パス起動
//*********************************************************************************
void CShader::BeginPass(UINT nPassNo)
{
	m_pFx->BeginPass(nPassNo);
}


//**関数***************************************************************************
//	概要	:	シェーダ更新
//*********************************************************************************
void CShader::UpdateShader()
{

}


//**関数***************************************************************************
//	概要	:	パスの終了
//*********************************************************************************
void CShader::EndPass()
{
	m_pFx->EndPass();
}


//**関数***************************************************************************
//	概要	:	シェーダ終了
//*********************************************************************************
void CShader::EndShader()
{
	m_pFx->End();
}

//=================================================================================
//	End of File
//=================================================================================