//プログラムヘッダ*****************************************************************
//	プログラム概要	:	3Dオブジェクト管理クラス
//*********************************************************************************
#pragma once

//==include部======================================================================
#include "../System/common.h"
#include <d3d9.h>
#include <d3dx9.h>
#include "Mesh.h"

#include <vector>
#include <tchar.h>
//=================================================================================


//==定数・列挙型宣言部=============================================================

//=================================================================================


//==マクロ定義部===================================================================
#define MESH_VECT			std::vector<CMesh*>							// メッシュ配列
#define MESH_VECT_ITE		std::vector<CMesh*>::iterator				// メッシュ配列へのイテレータ

#define MESHNAME_VECT		std::vector<LPCTSTR>							// メッシュ名配列
#define MESHNAME_VECT_ITE	std::vector<LPCTSTR>::iterator				// メッシュ名配列へのイテレータ
//=================================================================================


//==クラス・構造体宣言部===========================================================
class CMeshManage
{
private:
	static MESH_VECT		m_MeshVect;									// ロードされたメッシュを保持するリスト
	static MESHNAME_VECT	m_MeshNameVect;								// メッシュの名前を格納しておくリスト

public:
	// コンストラクタ・デストラクタ
	CMeshManage();
	virtual ~CMeshManage();

	static CMeshManage*	Create();										// 生成
	bool	Initialize();												// 初期化

	CMesh*	Search(LPCTSTR MeshName);									// すでにメッシュが格納されているかを検索
	CMesh*	Entry(LPCTSTR MeshName);										// メッシュをリスト内に登録
	void	VectorClear();												// 格納配列を完全クリア
	bool	ClearOnce(LPCTSTR MeshName);									// 指定リソースの解放

	void	Release();													// マネージャ解放
};
//=================================================================================


//=================================================================================
//	End of File
//=================================================================================